// State hook
import React, { useState } from 'react';

function Example() {
  // Declare a new state variable, which we'll call "count"
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>
        Click me
      </button>
    </div>
  );
}

//Effect hook
import React, { useState, useEffect } from 'react';

function Example() {
  const [count, setCount] = useState(0);

  // Similar to componentDidMount and componentDidUpdate:
  useEffect(() => {
    // Update the document title using the browser API
    document.title = `You clicked ${count} times`;
  });

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>
        Click me
      </button>
    </div>
  );
}

// context hooks
// Create a context
const ThemeContext = createContext("light");

// Create a provider for the context
const ThemeProvider = ({ children }) => {
  const [mode, setMode] = useState("light");

  return (
    <ThemeContext.Provider value={mode, setMode}>{children}</ThemeContext.Provider>
  );
};

// Create a consumer for the context
const useTheme = () => {
  return useContext(ThemeContext);
};

// Use the context in a component
const App = () => {
  const { mode, setMode } = useTheme();

  return (
    <ThemeProvider>
      <h1>The current mode is {mode}</h1>
      <button onClick={() => setMode("dark")}>Set mode to dark</button>
      <button onClick={() => setMode("light")}>Set mode to light</button>
    </ThemeProvider>
  );
};
